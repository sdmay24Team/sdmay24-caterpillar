type UserSettings @model @auth(rules: [{allow: private}]) {
  id: ID!
  CreatedBy: AWSEmail!
  Initials: String!
}

type Comment @model @auth(rules: [{allow: private}]) {
  id: ID!
  Comment: String!
  CreatedBy: AWSEmail!
}

type Record @model @auth(rules: [{allow: private}]) {
  id: ID!
  Date: AWSDate!
  Time: AWSTime!
  LocationOnPlant: String!
  Status: String!
  Comment: Comment @hasOne
  Initials: String!
  caterpillarID: ID! @index(name: "byCaterpillar")
  CreatedBy: AWSEmail!
  Stage: String!
  Cage: String!
}

type Media @model @auth(rules: [{allow: private}]) {
  id: ID!
  CaterpillarID: ID!
  BlobID: ID
  CreatedBy: AWSEmail!
}

type Caterpillar @model @auth(rules: [{allow: private}]) {
  id: ID!
  IndividualID: String!
  CreatedBy: AWSEmail!
  DateFound: AWSDate!
  SiteFound: String!
  LocationFound: String!
  TimeFound: AWSTime!
  HostPlant: String!
  CollectedBy: String!
  Stage: String!
  Slot: String
  Records: [Record] @hasMany(indexName: "byCaterpillar", fields: ["id"])
  DateEclosed: AWSDate
  DateReleased: AWSDate
  RegionReleased: String
  LocationReleased: String
  Cage: String
}
 